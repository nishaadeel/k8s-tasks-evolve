---
# https://kubernetes.io/docs/concepts/workloads/pods/
# https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#:~:text=Each%20container%20has%20a%20limit,CPU%20and%20256MiB%20of%20memory.
# https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
apiVersion: v1
kind: Pod
metadata:
  name: artemis
  labels: 
    app: demo
  annotations:
    created_by: "devops"
spec:
  containers:
  - name: artemis
    image: farrukhsadykov/artemis:latest
    ports:
    - containerPort: 5000
    readinessProbe:
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
      httpGet: null
      tcpSocket:
        port: 5000
    livenessProbe:
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
      httpGet: null
      tcpSocket:
        port: 5000
    resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        memory: "2Gi"
        cpu: "2"
  - name: redis
    image: redis:latest
    ports:
    - containerPort: 6379
    livenessProbe:
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
      httpGet: null
      tcpSocket:
        port: 6379
    readinessProbe:
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
      httpGet: null
      tcpSocket:
        port: 6379
    resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        memory: "2Gi"
        cpu: "2"


        
# kubectl apply -f artemis.yaml 